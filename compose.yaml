version: '3.9'

services:
  postgres-docker:
    container_name: postgres-docker
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_URL: ${POSTGRES_URL_DOCKER}
      # DATABASE_PORT: 5432
    volumes:
        - postgres:/var/lib/postgresql/data
    # Uncomment the next two lines to connect to your your database from outside the Docker environment, e.g. using a database GUI like Postico
    # ports:
    #     # - "${DATABASE_PORT}:5432"
    #     - "5433:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin-docker:
      container_name: pgadmin-docker
      image: dpage/pgadmin4:latest
      env_file:
        - .env
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        PGADMIN_PORT: ${PGADMIN_PORT}
      volumes:
          - pgadmin:/root/.pgadmin
      # ports:
      #     # - "${PGADMIN_PORT}:80"
      #     - "5051:80"
      networks:
        - postgres
      restart: unless-stopped

  nestjs-api:
    container_name: nestjs-api
    extends:
      file: compose.base.yaml
      service: nx-app-base
    command: pnpm run backend:dev:docker
    env_file:
        - .env
    # environment:
    #   NEST_SERVER_PORT: 3000
    #   NEST_SERVER_GLOBAL_PREFIX: api
    #   NEST_SERVER_HOST: ${DATABASE_HOST}
    #   NEST_SERVER_SECURE: true
    #   NEST_SERVER_CACHE: false
    #   # NEST_SERVER_PATHREWRITE: "^/api" : "/api"
    #   NEST_SERVER_LOGLEV: debug
    #   NEST_SERVER_CHANGEORIGINE: true
    #   DATABASE_HOST: localhost
    ports:
      - 3300:3200 # API Entry port
      # - 4311:4311 # Server Debugging port
    depends_on:
      - postgres-docker
    restart: unless-stopped
    volumes:
      - .:/app
      # This ensures that the NestJS container manages the node_modules folder
      # rather than synchronizes it with the host machine
    #
      - /app/node_modules
    networks:
      - postgres

networks:
    postgres:

volumes:
    postgres:
        name: basedev-db-docker
    pgadmin:
        name: pgadmin-db-docker
    mono-node-modules: null


version: '3.9'

services:

    postgres:
        container_name: postgres
        image: postgres:latest
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - postgres:/var/lib/postgresql/data
        # Uncomment the next two lines to connect to your your database from outside the Docker environment, e.g. using a database GUI like Postico
        ports:
            - "${DATABASE_PORT}:5432"
            # - "5432:5432"
        # network_mode: "host"
        networks:
            postgres:
        #         ipv4_address: 172.16.238.10
        restart: unless-stopped
        env_file:
          - .env

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:latest
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        volumes:
            - pgadmin:/root/.pgadmin
        ports:
            - "${PGADMIN_PORT}:80"
            # - "5050:80"
        networks:
            - postgres
        restart: unless-stopped

# nestjs App
    nestjs-api:
      container_name: nest-api
      extends:
        file: compose.base.yaml
        service: nx-app-base
      command: pnpm run configproxy && nx serve backend --watch --host=0.0.0.0
      build:
        context: .
        dockerfile: ./apps/backend/Dockerfile
        args:
          - POSTGRESQL_URL=${POSTGRESQL_URL}
      ports:
        - 3300:3300
      networks:
          - postgres
      depends_on:
        - postgres
      env_file:
        - .env
      restart: unless-stopped


networks:
    postgres:

volumes:
    postgres:
        name: basedev-db
    pgadmin:
        name: pgadmin-db
    # mono-node-modules: null
    mono-node-modules:
        name: mono-node-modules

